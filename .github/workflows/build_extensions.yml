name: Build and Publish Neo Extensions

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: silex/emacs:30-debian-ci-eask

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mark workspace as safe for git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
  
      - name: Get latest release asset (if any)
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).catch(() => null);
            return release?.data?.assets?.find(a => a.name === "neo-extensions.el")?.browser_download_url || "";

      - name: Download previous release file
        if: steps.get_release.outputs.result != ''
        run: curl -fsSL "${{ steps.get_release.outputs.result }}" -o old.el

      - name: Export OLD_MANIFEST (if old.el exists)
        run: |
          if [ -f old.el ]; then
            echo "OLD_MANIFEST=$PWD/old.el" >> "$GITHUB_ENV"
          fi

      - name: Run Emacs batch to generate dist/neo-extensions.el
        run: |
          mkdir -p dist
          emacs --batch -l build/extensions.el

      - name: Compare outputs
        id: compare
        run: |
          if [ -f old.el ] && cmp -s dist/neo-extensions.el old.el; then
            echo "Unchanged - skipping release"
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "Changed - will release"
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create GitHub Release
        if: steps.compare.outputs.skip == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Auto Release
          body: Auto-generated by GitHub Actions
          files: |
            dist/neo-extensions.el
            dist/neo-extensions.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
