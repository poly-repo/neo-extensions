name: Build and Publish Neo Extensions

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: jcs/emacs:30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Emacs batch to generate output file
        run: |
          mkdir -p dist
          emacs --batch -l build/extensions.el

      - name: Get latest release asset (if any)
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            }).catch(() => null);
            return release?.data?.assets?.find(a => a.name === "neo-extensions.el")?.browser_download_url || "";

      - name: Download previous release file
        if: steps.get_release.outputs.result != ''
        run: |
          curl -sSL "${{ steps.get_release.outputs.result }}" -o old.el || true

      - name: Compare with existing
        id: compare
        run: |
          if [ -f old.el ] && cmp -s dist/neo-extensions.el old.el; then
            echo "No changes"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.compare.outputs.skip == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Auto Release"
          body: "Auto-generated by GitHub Actions"
          files: dist/neo-extensions.el
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
